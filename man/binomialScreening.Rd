% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binomialScreening.R
\name{binomialScreening}
\alias{binomialScreening}
\title{A Test-Screening Tool Based on Binomial Regression}
\usage{
binomialScreening(formula, data = NULL, link = "logit", Nfolds = 20L,
  p.threshold = c(seq(0.01, 0.09, 0.01), seq(0.1, 0.6, 0.05), seq(0.65,
  0.95, 0.1)), ...)
}
\arguments{
\item{formula}{An object of class \code{\link{formula}}  defining the testing
outcome and predictor covariates, which is passed to \code{stats::glm()}.}

\item{data}{The "training" sample; a data frame containing the testing
outcome and predictive covariates to be used for testing screening.  The
testing outcome must be binary (0,1) indicating negative and positive test
results, respectively, or logical (TRUE/FALSE).  The covariates are typically
binary (0 = no, 1 = yes) responses to questions which may be predictive of
the test result, but any numeric or factor covariates can be used.}

\item{link}{The character-valued name of the link function for binomial
regression.  Choices are "\code{logit}" (default), "\code{cloglog}" or
"\code{probit}".}

\item{Nfolds}{An integer number of folds used for \emph{k}-fold cross
validation (default = 20).}

\item{p.threshold}{A numeric vector of reference probabilities for estimation
of Receiver Operating Characteristics.}
}
\value{
An object of class binomscreenr containing the elements:
\describe{
\item{\code{Call}}{The function call.}
\item{\code{ModelFit}}{An object of class \code{\link{glm}}.}
\item{\code{Prevalence}}{Prevalence of the test condition in the training sample.}
\item{\code{ParmEst}}{A vector containing the binomial regression parameter estimates.}
\item{\code{InSamplePerf}}{A data frame containing in-sample (overly-optimistic)
sensitivities and specificities.}
\item{\code{CrossVal}}{A data frame containing \emph{k}-fold cross-validation results.}
\item{\code{CrossValPerf}}{A data frame containing out-of-sample  sensitivities and
specificities.}
}
}
\description{
Estimate binomial model parameters and cross-validated performance of test
screening based on binomial regression.  The results provide information from
which to choose a probability threshold above which individual out-of-sample
probabilies indicate the need to perform a diagnostic test.  Out-of-sample
performance is estimated using \emph{k}-fold cross validation.
}
\examples{
## Evaluate the performance of screening thresholds based on a logisitc model

data(unicorns)
help(unicorns)
unitool <- binomialScreening(testresult ~ Q1 + Q2 + Q3 + Q4 + Q5,
                             data = unicorns, link = "logit",
                             p.threshold = c(seq(0.01, 0.10, by = 0.015),
                                             seq(.15, 0.95, by = 0.05)))
summary(unitool)
plot(unitool)
testCounts(SensSpec = unitool)

## Example implementation of screening based on those results
## Suppose there are new observations (excluding testing) from two previously
## untested unicorns:

new <- data.frame(ID = c('"Bernie P."', '"Alice D."'), Q1 = c(0, 0), Q2 = c(0, 0),
                   Q3 = c(1, 0), Q4 = c(0, 0), Q5 = c(1, 0))
print(new)
## Compute point estimates of their predicted probabilities testing positive:
inverseLink("logit",
            as.matrix(cbind(c(1, 1), new[, 2:6])) \%*\%
                            as.matrix(unitool$ParmEst, ncol = 1))

## If p.threshold = 0.025 is chosen as the screening threshold
## (sensitivity and specificity 77\\\% and 69\\\%, respectively) then "Bernie P."
## would be offered testing and "Alice D." would not.

## In practice, the computation of the probabilities of positive test results
## among newly observed individuals might be coded outside of R using, say, a
## spreadsheet.  Within R it is simpler to use \\code{predict}:

inverseLink("logit", predict(unitool$ModelFit, newdata = new))
}
\seealso{
\code{\link{glm}}
}
